{"version":3,"sources":["images/delete.svg","images/edit.svg","images/accept.svg","images/remove.svg","components/Input/Input.jsx","components/Button/Button.jsx","redux/reducer.js","pages/StartPage/Start.jsx","components/Header/Header.jsx","components/EditModal/EditModal.jsx","components/ToDo/ToDoList.jsx","components/TabContainer/TabContainer.jsx","pages/ToDoPage/ToDo.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","React","createElement","htmlFor","id","type","className","placeholder","onChange","value","Button","onClick","title","addTodoReducer","createSlice","name","initialState","activeTodos","completedTodos","buttonActive","buttonCompleted","isOpen","reducers","addToDo","state","action","push","Date","toISOString","task","payload","completed","addCompleted","forEach","el","filter","todo","removeActive","removeCompleted","changeActive","find","text","setUser","pressActive","pressCompleted","openModal","closeModal","_addTodoReducer$actio","actions","reducer","connect","dispatch","obj","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","error","setError","navigate","useNavigate","useDispatch","e","target","changeUserName","preventDefault","trim","submitUserName","Header","user","useSelector","activeTodosLength","length","ToDoEditModal","_ref","textForUpdate","setText","src","closeIcon","alt","ToDoList","setId","textOnChange","setTextOnChange","store","activeToDos","completedToDos","map","key","acceptIcon","editIcon","deleteIcon","TabContainer","ToDoPage","setTodo","toDoChange","alert","App","Fragment","Routes","Route","path","Component","StartPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.39f381d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.28e87e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.1be3da34.svg\";","module.exports = __webpack_public_path__ + \"static/media/accept.f48ea4db.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.a9344d12.svg\";","import React from \"react\"\r\nimport './input.css'\r\n\r\nexport default function Input(props) {\r\n    return (\r\n        <label htmlFor={props.id} >\r\n            <input\r\n            id={props.id}\r\n            type='text'\r\n            className={props.className}\r\n            placeholder={props.placeholder}\r\n            onChange={props.onChange}\r\n            value={props.value}\r\n            />\r\n        </label>\r\n    )\r\n}","import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default function Button(props) {\r\n    return(\r\n        <button\r\n        className={props.className}\r\n        type={props.type}\r\n        onClick={props.onClick}\r\n        >\r\n        {props.title}\r\n        </button>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst addTodoReducer = createSlice({\r\n  name: 'todo',\r\n  initialState: {\r\n      activeTodos: [],\r\n      completedTodos: [],\r\n      name: '',\r\n      buttonActive: true,\r\n      buttonCompleted: false,\r\n      isOpen: false,\r\n  },\r\n  reducers: {\r\n      addToDo(state, action) {\r\n          state.activeTodos.push({\r\n              id: new Date().toISOString(),\r\n              task: action.payload,\r\n              completed: false\r\n          })\r\n      },\r\n      addCompleted(state, action) {\r\n          state.activeTodos.forEach(el => {\r\n              if (el.id === action.payload){\r\n                  el.completed = !el.completed\r\n                  state.completedTodos.push(el)\r\n              }\r\n          })\r\n          state.activeTodos = state.activeTodos.filter((todo) => !todo.completed)\r\n\r\n      },\r\n      removeActive(state, action) {\r\n          state.activeTodos = state.activeTodos.filter((todo) => todo.id !== action.payload)\r\n      },\r\n      removeCompleted(state, action) {\r\n          state.completedTodos = state.completedTodos.filter((todo) => todo.id !== action.payload)\r\n      },\r\n      changeActive(state, action) {\r\n          const todo = state.activeTodos.find(todo => todo.id === action.payload.id)\r\n          state.activeTodos.forEach((el) => {\r\n              if (el.id === todo.id) {\r\n                el.task = action.payload.text\r\n              }\r\n          })\r\n      },\r\n      setUser(state, action) {\r\n          state.name = action.payload\r\n      },\r\n      pressActive(state) {\r\n        state.buttonActive = true\r\n        state.buttonCompleted = false\r\n      },\r\n      pressCompleted(state) {\r\n          state.buttonActive = false\r\n          state.buttonCompleted = true\r\n      },\r\n      openModal(state) {\r\n        state.isOpen = true\r\n      },\r\n      closeModal(state) {\r\n          state.isOpen = false\r\n      },\r\n  },\r\n})\r\n\r\nexport const {addToDo, addCompleted, removeActive, removeCompleted, changeActive, \r\n  setUser, pressActive, pressCompleted, openModal, closeModal} = addTodoReducer.actions\r\n\r\nexport const reducer = addTodoReducer.reducer","import React, {useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport './Start.css'\r\nimport Input from '../../components/Input/Input'\r\nimport Button from '../../components/Button/Button'\r\nimport { setUser } from '../../redux/reducer'\r\n\r\n\r\nfunction StartPage(props) {\r\n    const [userName, setUserName] = useState(''),\r\n        [error, setError] = useState(false),\r\n        navigate = useNavigate(),\r\n        dispatch = useDispatch()\r\n  \r\n    const changeUserName = (e) => {\r\n        dispatch(setUser(e.target.value))\r\n        setUserName(e.target.value)\r\n    }\r\n  \r\n    function submitUserName(e) {\r\n        e.preventDefault()\r\n        if (userName.trim() !== '') {\r\n            setError(false)\r\n            navigate('/todo')\r\n            } else {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='start-page'>\r\n            <h1>Привет!</h1>\r\n            <div className='start-content'>\r\n                <Input \r\n                className='start-page__userName'\r\n                type='text'\r\n                name='name'\r\n                placeholder='Введите ваше имя'\r\n                value={userName}\r\n                onChange={(e) => changeUserName(e)}\r\n                />\r\n                <Button \r\n                className='start-page__submit'\r\n                type='submit'\r\n                title='Сохранить'\r\n                onClick={(e) => submitUserName(e)}\r\n                />\r\n            </div>\r\n            {error && <span className='start-error'>* Поле обязательно для заполнения</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      setUser: (obj) => dispatch(setUser(obj)),\r\n    }\r\n  }\r\n  \r\nexport default connect(null, mapDispatchToProps)(StartPage)","import React from 'react'\r\nimport './Header.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Header() {\r\n  const user = useSelector(state => state.name)\r\n  const activeTodosLength = useSelector(state => state.activeTodos.length)\r\n\r\n    return (\r\n        <header className='header__wrapper'>\r\n            <h1 className='header__user'>Привет, {user}</h1>\r\n            <span className='header__active-toDos'>\r\n                Количество активных задач: {''}\r\n                <span>{activeTodosLength}</span>\r\n            </span>\r\n        </header>\r\n      )\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeActive } from '../../redux/reducer.js'\r\nimport { closeModal } from '../../redux/reducer.js'\r\nimport closeIcon from '../../images/remove.svg'\r\nimport './EditModal.css'\r\nimport Input from '../Input/Input.jsx'\r\n\r\nexport default function ToDoEditModal({isOpen, id, textForUpdate}) {\r\n\r\n  const [text, setText] = useState(textForUpdate)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function closeWindow() {\r\n    dispatch(changeActive({id, text}))\r\n    dispatch(closeModal())\r\n  }\r\n\r\n  return(\r\n    !isOpen ? null :\r\n    <div className='edit-window'>\r\n      <div className='edit-window__content'>\r\n        <Input\r\n        type='text'\r\n        className='edit-window__input'\r\n        onChange={(e) => setText(e.target.value)}\r\n        value={text}/>\r\n          <img\r\n            className='close-button'\r\n            src={closeIcon}\r\n            alt='close button'\r\n            onClick={() => closeWindow()}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addCompleted, removeCompleted, removeActive, openModal } from '../../redux/reducer.js'\r\nimport editIcon from '../../images/edit.svg'\r\nimport acceptIcon from '../../images/accept.svg'\r\nimport deleteIcon from '../../images/delete.svg'\r\nimport ToDoEditModal from '../../components/EditModal/EditModal'\r\nimport './ToDoList.css'\r\n\r\nexport default function ToDoList() {\r\n\r\n  const [id, setId] = useState(0),\r\n    [textOnChange, setTextOnChange] = useState(''),\r\n    dispatch = useDispatch(),\r\n    buttonActive = useSelector((store) => store.buttonActive),\r\n    buttonCompleted = useSelector((store) => store.buttonCompleted),\r\n    activeToDos = useSelector((store) => store.activeTodos),\r\n    completedToDos = useSelector((store) => store.completedTodos),\r\n    isOpen = useSelector((store) => store.isOpen)\r\n\r\n  return(\r\n    <ul className='list-items'>\r\n      {(!buttonActive & !buttonCompleted) ?\r\n        (<div>List</div>)\r\n        : \r\n        buttonActive ? \r\n        (activeToDos.map((task) =>\r\n        <li \r\n        className='list-item'\r\n        key={task.id}>\r\n            {task.task}\r\n            <div className='buttons'>\r\n            <img\r\n                className='done-button'\r\n                id={task.id}\r\n                src={acceptIcon}\r\n                alt='done button'\r\n                onClick={() => dispatch(addCompleted(task.id))}\r\n            />\r\n            <img\r\n                className='edit-button'\r\n                src={editIcon}\r\n                alt='edit button'\r\n                onClick={(e) => (\r\n                    setId(task.id),\r\n                    setTextOnChange(task.task),\r\n                    dispatch(openModal())\r\n                )}\r\n            />\r\n            <img\r\n                className='delete-button'\r\n                src={deleteIcon}\r\n                alt='delete button'\r\n                onClick={() => dispatch(removeActive(task.id))}\r\n            />\r\n            </div>\r\n        </li>\r\n        )) \r\n        :\r\n        (completedToDos.map((task) =>\r\n        <li\r\n        key={task.id}\r\n        className='list-item'\r\n        >\r\n          {task.task}\r\n          <img\r\n                className='delete-button buttons'\r\n                src={deleteIcon}\r\n                alt='delete button'\r\n                onClick={() => dispatch(removeCompleted(task.id))}\r\n          />\r\n        </li>))\r\n      }\r\n      {isOpen ? (<ToDoEditModal isOpen={isOpen} id={id} textForUpdate={textOnChange}/>) : null}\r\n    </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { pressActive, pressCompleted } from '../../redux/reducer.js'\r\nimport Button from '../Button/Button.jsx'\r\n\r\nexport default function TabContainer() {\r\n\r\n  const dispatch = useDispatch()\r\n  const buttonActive = useSelector(state => state.buttonActive)\r\n  const buttonCompleted = useSelector(state => state.buttonCompleted)\r\n\r\n  return(\r\n    <div className='tab-container'>\r\n      <Button\r\n      className={buttonActive}\r\n      type='button'\r\n      onClick={() => dispatch(pressActive())}\r\n      title='Активные'\r\n      />\r\n      <Button\r\n      className={buttonCompleted}\r\n      type='button'\r\n      onClick={() => dispatch(pressCompleted())}\r\n      title='Завершенные'\r\n      />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addToDo } from '../../redux/reducer.js'\r\nimport './ToDo.css'\r\nimport Button from '../../components/Button/Button'\r\nimport Header from '../../components/Header/Header'\r\nimport Input from '../../components/Input/Input'\r\nimport ToDoList from '../../components/ToDo/ToDoList.jsx'\r\nimport TabContainer from '../../components/TabContainer/TabContainer.jsx'\r\n\r\nconst ToDoPage = () => {\r\n  const [todo, setTodo] = useState(''),\r\n    dispatch = useDispatch()\r\n\r\n  const toDoChange = (e) => {\r\n    setTodo(e.target.value)\r\n  }\r\n\r\n  const addTodo = () => {\r\n    if (todo === '') {\r\n      alert('Заполните поле ввода')\r\n    } else {\r\n      dispatch(addToDo(todo))\r\n      setTodo('')\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className='todo-page'>\r\n      <Header/>\r\n      <div className='todos-list'>\r\n        <Input\r\n          className='new-task'\r\n          type='text'\r\n          onChange={(e) => toDoChange(e)}\r\n          placeholder='Новая задача'\r\n          value={todo}\r\n        />\r\n        <Button onClick={() => addTodo()} className='todo-list__button' title='Добавить'/>\r\n      </div>\r\n      <TabContainer />\r\n      <ToDoList/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToDoPage","import React from 'react'\nimport './App.css'\nimport { Routes, Route } from 'react-router-dom'\nimport StartPage from './pages/StartPage/Start'\nimport ToDoPage from './pages/ToDoPage/ToDo'\n\nexport default function App() {\n  return (\n    <>\n      <Routes>\n        <Route path='/' Component={StartPage}/>\n        <Route path='/todo' Component={ToDoPage}/>\n      </Routes>\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { reducer } from \"./reducer\"\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}